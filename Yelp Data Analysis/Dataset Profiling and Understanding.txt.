Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table =10000
viii. photo table =10000 
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000 (id)
ii. Hours = 1562 (business_id)
iii. Category = 2643 (business_id)
iv. Attribute = 1115 (business_id)
v. Review = 8090 (business_id)
vi. Checkin = 493 (business_id)
vii. Photo = 6493 (business_id)
viii. Tip = 3979 (business_id)
ix. User = 10000 (id)
x. Friend = 11 (user_id)
xi. Elite_years = 2780 (user_id)

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: NO
	
	
	SQL code used to arrive at answer:
	
	SELECT *
        FROM user
        WHERE column_name IS NULL



	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:1		max:5		avg:3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:1		max:5		avg:3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:0		max:2		avg:0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:1		max:53		avg:1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:0		max:2000		avg:24.2995
		



5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

SELECT city, SUM(review_count) AS total reviews
FROM business
GROUP BY city
ORDER BY review_count DESC
	
	
	Copy and Paste the Result Below:

		+-----------------+---------------+
		| city            | total_reviews |
		+-----------------+---------------+
		| Las Vegas       |         82854 |
		| Phoenix         |         34503 |
		| Toronto         |         24113 |
		| Scottsdale      |         20614 |
		| Charlotte       |         12523 |
		| Henderson       |         10871 |
		| Tempe           |         10504 |
		| Pittsburgh      |          9798 |
		| MontrÃƒÂ©al       |          9448 |
		| Chandler        |          8112 |
		| Mesa            |          6875 |
		| Gilbert         |          6380 |
		| Cleveland       |          5593 |
		| Madison         |          5265 |
		| Glendale        |          4406 |
		| Mississauga     |          3814 |
		| Edinburgh       |          2792 |
		| Peoria          |          2624 |
		| North Las Vegas |          2438 |
		| Markham         |          2352 |
		| Champaign       |          2029 |
		| Stuttgart       |          1849 |
		| Surprise        |          1520 |
		| Lakewood        |          1465 |
		| Goodyear        |          1155 |
		+-----------------+---------------+
		(Output limit exceeded, 25 of 362 total rows shown)
	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT stars, COUNT (*) As stars_count
FROM business
WHERE city ='Avon'
GROUP BY stars
ORDER BY stars DESC

Copy and Paste the Resulting Table Below (2 columns Ã¢â‚¬â€œ star rating and count):

+-------+-------------+
| stars | stars_count |
+-------+-------------+
|   5.0 |           1 |
|   4.5 |           1 |
|   4.0 |           2 |
|   3.5 |           3 |
|   2.5 |           2 |
|   1.5 |           1 |
+-------+-------------+

ii. Beachwood

SQL code used to arrive at answer:

SELECT stars, COUNT (*) As stars_count
FROM business
WHERE city ='Beachwood'
GROUP BY stars
ORDER BY stars DESC

Copy and Paste the Resulting Table Below (2 columns Ã¢â‚¬â€œ star rating and count):
		
+-------+-------------+
| stars | stars_count |
+-------+-------------+
|   5.0 |           5 |
|   4.5 |           2 |
|   4.0 |           1 |
|   3.5 |           2 |
|   3.0 |           2 |
|   2.5 |           1 |
|   2.0 |           1 |
+-------+-------------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

SELECT name, review_count
FROM user
ORDER BY review_count DESC
LIMIT 3
		
	Copy and Paste the Result Below:
	
+-----------+--------------+
| name      | review_count |
+-----------+--------------+
| Gerald    |         2000 |
| Sara      |         1629 |
| Yuri      |         1339 |
+-----------+--------------+	


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	
There is no correlation between reviews and fans.

order by reviews count in descending
+-----------+------+--------------+
| name      | fans | review_count |
+-----------+------+--------------+
| Gerald    |  253 |         2000 |
| Sara      |   50 |         1629 |
| Yuri      |   76 |         1339 |
| .Hon      |  101 |         1246 |
| William   |  126 |         1215 |
| Harald    |  311 |         1153 |
| eric      |   16 |         1116 |
| Roanna    |  104 |         1039 |
| Mimi      |  497 |          968 |
| Christine |  173 |          930 |
| Ed        |   38 |          904 |
| Nicole    |   43 |          864 |
| Fran      |  124 |          862 |
| Mark      |  115 |          861 |
| Christina |   85 |          842 |
| Dominic   |   37 |          836 |
| Lissa     |  120 |          834 |
| Lisa      |  159 |          813 |
| Alison    |   61 |          775 |
| Sui       |   78 |          754 |
| Tim       |   35 |          702 |
| L         |   10 |          696 |
| Angela    |  101 |          694 |
| Crissy    |   25 |          676 |
| Lyn       |   45 |          675 |
+-----------+------+--------------+
order by fans in descending 
+-----------+------+--------------+
| name      | fans | review_count |
+-----------+------+--------------+
| Amy       |  503 |          609 |
| Mimi      |  497 |          968 |
| Harald    |  311 |         1153 |
| Gerald    |  253 |         2000 |
| Christine |  173 |          930 |
| Lisa      |  159 |          813 |
| Cat       |  133 |          377 |
| William   |  126 |         1215 |
| Fran      |  124 |          862 |
| Lissa     |  120 |          834 |
| Mark      |  115 |          861 |
| Tiffany   |  111 |          408 |
| bernice   |  105 |          255 |
| Roanna    |  104 |         1039 |
| Angela    |  101 |          694 |
| .Hon      |  101 |         1246 |
| Ben       |   96 |          307 |
| Linda     |   89 |          584 |
| Christina |   85 |          842 |
| Jessica   |   84 |          220 |
| Greg      |   81 |          408 |
| Nieves    |   80 |          178 |
| Sui       |   78 |          754 |
| Yuri      |   76 |         1339 |
| Nicole    |   73 |          161 |
+-----------+------+--------------+
Based on the results above, we can conclude that fans and the number of reviews are not correlated.

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: There are more reviews with love.

	
	SQL code used to arrive at answer:

	SELECT reviews, COUNT(reviews)
	FROM (
		SELECT
    			CASE
				WHEN text LIKE '%love%' THEN 'love'
         			WHEN text LIKE '%hate%' THEN 'hate'
        			ELSE 'others'
    			END reviews
		FROM review
	      )
	GROUP BY reviews

10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
SELECT name, fans
FROM user
ORDER BY fans DESC
LIMIT 10
	
	Copy and Paste the Result Below:
	+-----------+------------+
	| name      | total_fans |
	+-----------+------------+
	| Amy       |        503 |
	| Mimi      |        497 |
	| Harald    |        311 |
	| Gerald    |        253 |
	| Christine |        173 |
	| Lisa      |        159 |
	| Cat       |        133 |
	| William   |        126 |
	| Fran      |        124 |
	| Lissa     |        120 |
	+-----------+------------+


